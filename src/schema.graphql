type DeleteUserResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  DeleteUser(email: String!): DeleteUserResponse!
  EmailLogin(email: String!, password: String!): EmailLoginResponse!
  EmailSignUp(username: String!, email: String!, password: String!, profilePhoto: String): EmailSignUpResponse!
}

type EmailLoginResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type GetAllUsersResponse {
  ok: Boolean!
  error: String
  user: [User]
}

type Query {
  GetAllUsers: GetAllUsersResponse!
  GetUser(id: Int!): GetUserResponse!
}

type GetUserResponse {
  ok: Boolean!
  error: String
  user: User
}

type User {
  id: Int!
  email: String
  verifiedEmail: Boolean!
  username: String!
  password: String
  profilePhoto: String
  createdAt: String!
  updatedAt: String
}

type Verification {
  id: Int!
  target: String!
  payload: String!
  key: String!
  verified: Boolean!
  createdAt: String!
  updatedAt: String
}
